deploymentMode: SingleBinary
loki:
  commonConfig:
    replication_factor: 1
  auth_enabled: true
  storage:
    type: s3
    bucketNames:
      chunks: ${ s3_bucket_loki_data }
      ruler: ${ s3_bucket_loki_ruler }
      admin: ${ s3_bucket_loki_admin }
    s3:
      endpoint: ${ s3_endpoint_url }
      region: ${ s3_region }
      accessKeyId: ${ s3_access_key }
      secretAccessKey: ${ s3_secret_key }
      signatureVersion: null
      s3ForcePathStyle: true
      #insecure: true
      #http_config: {}
  schemaConfig:
    configs:
      - from: 2025-01-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: index_
          period: 24h

# Configuration for the single binary node(s)
singleBinary:
  replicas: 1
  persistence:
    size: 5Gi
  nodeSelector:
    worker-group: logging
# The Loki canary pushes logs to and queries from this loki installation to test
# that it's working correctly
lokiCanary:
  enabled: true
  push: true
  nodeSelector:
    worker-group: logging
write:
  replicas: 0
read:
  replicas: 0
backend:
  replicas: 0
# -- Configuration for the `admin-api` target
adminApi:
  # -- Define the amount of instances
  replicas: 1
  nodeSelector:
    worker-group: logging
# Configuration for the gateway
gateway:
  # -- Specifies whether the gateway should be enabled
  enabled: true
  # -- Number of replicas for the gateway
  replicas: 1
  nodeSelector:
    worker-group: logging
resultsCache:
  # -- Specifies whether memcached based results-cache should be enabled
  enabled: false
chunksCache:
  # -- Amount of memory allocated to chunks-cache for object storage (in MB).
  allocatedMemory: 256
  # -- Maximum item memory for chunks-cache (in MB).
  maxItemMemory: 4
#  tolerations:
#  - key: "node-role"
#    operator: "Equal"
#    value: "infra"
#    effect: "NoSchedule"
  nodeSelector:
    worker-group: logging
