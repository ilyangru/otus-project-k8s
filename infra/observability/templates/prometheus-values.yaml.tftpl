alertmanager:
  alertmanagerSpec:
   affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: ${ affinity_key }
              operator: In
              values:
              - ${ affinity_value }
prometheusOperator:
  admissionWebhooks:
    patch:
      affinity:
        nodeAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ${ affinity_key }
                  operator: In
                  values:
                  - ${ affinity_value }
  affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: ${ affinity_key }
              operator: In
              values:
              - ${ affinity_value }
  prometheusSpec:
       affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ${ affinity_key }
                  operator: In
                  values:
                  - ${ affinity_value }
grafana:
  enabled: true
  adminPassword: ${grafana_admin_password}
  ingress:
    enabled: true
    hosts:
      - grafana.otus.ilyang.ru
    tls:
      - secretName: grafana.otus.ilyang.ru
        hosts:
        - grafana.otus.ilyang.ru
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: "le-prod"

  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki.default.svc.cluster.local:3100
      access: proxy
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
      secureJsonData:
        httpHeaderValue1: '1'
